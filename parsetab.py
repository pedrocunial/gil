
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVrightUPLUSUMINUSASSIGNER CLOSE_BRACKET CLOSE_PARENT COMMENT DIV ELSE EQ GT ID IF LOOP LT MINUS MULT NUMBER OPEN_BRACKET OPEN_PARENT PLUSexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term MULT factorterm : term DIV factorterm : factorfactor : NUMBERfactor : IDfactor : PLUS expression %prec UPLUS\n              | MINUS expression %prec UMINUSfactor : OPEN_PARENT expression CLOSE_PARENTassign : ID ASSIGNER expression'
    
_lr_action_items = {'NUMBER':([0,2,4,8,9,10,12,13,],[6,6,6,6,6,6,6,6,]),'ID':([0,2,4,8,9,10,12,13,],[7,7,7,7,7,7,7,7,]),'PLUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,],[2,9,2,-3,2,-6,-7,-8,2,2,2,-9,2,2,-10,9,-1,-2,-4,-5,-11,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,],[4,10,4,-3,4,-6,-7,-8,4,4,4,-9,4,4,-10,10,-1,-2,-4,-5,-11,]),'OPEN_PARENT':([0,2,4,8,9,10,12,13,],[8,8,8,8,8,8,8,8,]),'$end':([1,3,5,6,7,11,14,16,17,18,19,20,],[0,-3,-6,-7,-8,-9,-10,-1,-2,-4,-5,-11,]),'MULT':([3,5,6,7,11,14,16,17,18,19,20,],[12,-6,-7,-8,-9,-10,12,12,-4,-5,-11,]),'DIV':([3,5,6,7,11,14,16,17,18,19,20,],[13,-6,-7,-8,-9,-10,13,13,-4,-5,-11,]),'CLOSE_PARENT':([3,5,6,7,11,14,15,16,17,18,19,20,],[-3,-6,-7,-8,-9,-10,20,-1,-2,-4,-5,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,4,8,],[1,11,14,15,]),'term':([0,2,4,8,9,10,],[3,3,3,3,16,17,]),'factor':([0,2,4,8,9,10,12,13,],[5,5,5,5,5,5,18,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parser.py',15),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','parser.py',20),
  ('expression -> term','expression',1,'p_expression_term','parser.py',25),
  ('term -> term MULT factor','term',3,'p_term_times','parser.py',30),
  ('term -> term DIV factor','term',3,'p_term_div','parser.py',35),
  ('term -> factor','term',1,'p_term_factor','parser.py',40),
  ('factor -> NUMBER','factor',1,'p_factor_num','parser.py',45),
  ('factor -> ID','factor',1,'p_factor_id','parser.py',50),
  ('factor -> PLUS expression','factor',2,'p_factor_sign_num','parser.py',59),
  ('factor -> MINUS expression','factor',2,'p_factor_sign_num','parser.py',60),
  ('factor -> OPEN_PARENT expression CLOSE_PARENT','factor',3,'p_factor_expr','parser.py',68),
  ('assign -> ID ASSIGNER expression','assign',3,'p_assign','parser.py',73),
]
