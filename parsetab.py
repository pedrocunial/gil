
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVrightUPLUSUMINUSNUMBER PLUS MINUS MULT DIV OPEN_PARENT CLOSE_PARENT OPEN_BRACKET CLOSE_BRACKET ID COMMENT ASSIGNER EQ LT GT AND OR NOT IF ELSE LOOP PRINT INPUTstmts : stmt stmts\n             | emptystmt : assign\n            | outassign : ID ASSIGNER expressionout : PRINT expressionexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term MULT factorterm : term DIV factorterm : factorfactor : NUMBERfactor : IDfactor : INPUTfactor : PLUS expression %prec UPLUS\n              | MINUS expression %prec UMINUSfactor : OPEN_PARENT expression CLOSE_PARENTempty : '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,8,10,12,14,15,16,17,19,22,25,27,28,29,30,31,],[-19,0,-19,-2,-3,-4,-1,-6,-9,-12,-13,-14,-15,-5,-16,-17,-7,-8,-10,-11,-18,]),'ID':([0,2,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,],[6,6,-3,-4,16,16,-6,16,-9,16,-12,-13,-14,-15,16,-5,16,16,-16,16,16,-17,-7,-8,-10,-11,-18,]),'PRINT':([0,2,4,5,10,12,14,15,16,17,19,22,25,27,28,29,30,31,],[7,7,-3,-4,-6,-9,-12,-13,-14,-15,-5,-16,-17,-7,-8,-10,-11,-18,]),'ASSIGNER':([6,],[9,]),'NUMBER':([7,9,11,13,18,20,21,23,24,],[15,15,15,15,15,15,15,15,15,]),'INPUT':([7,9,11,13,18,20,21,23,24,],[17,17,17,17,17,17,17,17,17,]),'PLUS':([7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,],[11,11,20,11,-9,11,-12,-13,-14,-15,11,20,11,11,-16,11,11,-17,20,-7,-8,-10,-11,-18,]),'MINUS':([7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,],[13,13,21,13,-9,13,-12,-13,-14,-15,13,21,13,13,-16,13,13,-17,21,-7,-8,-10,-11,-18,]),'OPEN_PARENT':([7,9,11,13,18,20,21,23,24,],[18,18,18,18,18,18,18,18,18,]),'MULT':([12,14,15,16,17,22,25,27,28,29,30,31,],[23,-12,-13,-14,-15,-16,-17,23,23,-10,-11,-18,]),'DIV':([12,14,15,16,17,22,25,27,28,29,30,31,],[24,-12,-13,-14,-15,-16,-17,24,24,-10,-11,-18,]),'CLOSE_PARENT':([12,14,15,16,17,22,25,26,27,28,29,30,31,],[-9,-12,-13,-14,-15,-16,-17,31,-7,-8,-10,-11,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmts':([0,2,],[1,8,]),'stmt':([0,2,],[2,2,]),'empty':([0,2,],[3,3,]),'assign':([0,2,],[4,4,]),'out':([0,2,],[5,5,]),'expression':([7,9,11,13,18,],[10,19,22,25,26,]),'term':([7,9,11,13,18,20,21,],[12,12,12,12,12,27,28,]),'factor':([7,9,11,13,18,20,21,23,24,],[14,14,14,14,14,14,14,29,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> stmts","S'",1,None,None,None),
  ('stmts -> stmt stmts','stmts',2,'p_stmts','parser.py',18),
  ('stmts -> empty','stmts',1,'p_stmts','parser.py',19),
  ('stmt -> assign','stmt',1,'p_stmt','parser.py',25),
  ('stmt -> out','stmt',1,'p_stmt','parser.py',26),
  ('assign -> ID ASSIGNER expression','assign',3,'p_assign','parser.py',31),
  ('out -> PRINT expression','out',2,'p_out','parser.py',36),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parser.py',41),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','parser.py',46),
  ('expression -> term','expression',1,'p_expression_term','parser.py',51),
  ('term -> term MULT factor','term',3,'p_term_times','parser.py',56),
  ('term -> term DIV factor','term',3,'p_term_div','parser.py',61),
  ('term -> factor','term',1,'p_term_factor','parser.py',66),
  ('factor -> NUMBER','factor',1,'p_factor_num','parser.py',71),
  ('factor -> ID','factor',1,'p_factor_id','parser.py',76),
  ('factor -> INPUT','factor',1,'p_factor_input','parser.py',81),
  ('factor -> PLUS expression','factor',2,'p_factor_sign_num','parser.py',86),
  ('factor -> MINUS expression','factor',2,'p_factor_sign_num','parser.py',87),
  ('factor -> OPEN_PARENT expression CLOSE_PARENT','factor',3,'p_factor_expr','parser.py',92),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',97),
]
