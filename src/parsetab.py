
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVrightUPLUSUMINUSNUMBER PLUS MINUS MULT DIV OPEN_PARENT CLOSE_PARENT OPEN_BRACKET CLOSE_BRACKET ID ASSIGNER EQ LT GT AND OR NOT COMMA IF ELSE LOOP FUNCTION PRINT INPUTstmts : stmt stmts\n             | emptystmt : assign\n            | out\n            | if\n            | loop\n            | funcdecfuncdec : FUNCTION ID params OPEN_BRACKET stmts CLOSE_BRACKETparams : OPEN_PARENT args CLOSE_PARENT\n              | OPEN_PARENT CLOSE_PARENTargs : args COMMA ID\n            | IDif : IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET\n          | IF relexp OPEN_BRACKET stmts CLOSE_BRACKETif : IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET\n          | IF error OPEN_BRACKET stmts CLOSE_BRACKETloop : LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKETloop : LOOP error OPEN_BRACKET stmts CLOSE_BRACKETassign : ID ASSIGNER relexpout : PRINT relexprelexp : expression\n              | relexp GT relexp\n              | relexp EQ relexp\n              | relexp LT relexpexpression : expression PLUS expressionexpression : expression OR relexpexpression : expression MINUS expressionexpression : termterm : term MULT expressionterm : term DIV expressionterm : term AND relexpterm : factorfactor : NUMBERfactor : IDfactor : INPUTfactor : PLUS expression %prec UPLUS\n              | MINUS expression %prec UMINUS\n              | NOT relexpfactor : OPEN_PARENT relexp CLOSE_PARENTfactor : ID callparamscallparams : OPEN_PARENT callargs CLOSE_PARENT\n                  | OPEN_PARENT CLOSE_PARENTcallargs : callargs COMMA relexp\n                | relexpempty : '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,14,16,17,20,21,22,23,24,32,39,40,44,46,54,55,56,57,58,59,60,61,62,64,66,75,77,78,79,80,87,93,94,],[-45,0,-45,-2,-3,-4,-5,-6,-7,-1,-20,-21,-28,-32,-33,-34,-35,-19,-36,-37,-40,-38,-22,-23,-24,-25,-26,-27,-29,-30,-31,-42,-39,-41,-14,-16,-17,-18,-8,-13,-15,]),'ID':([0,2,4,5,6,7,8,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,53,54,55,56,57,58,59,60,61,62,64,66,71,75,76,77,78,79,80,83,87,89,90,93,94,],[9,9,-3,-4,-5,-6,-7,23,23,23,31,23,-20,-21,23,23,-28,-32,-33,-34,-35,23,23,-19,23,23,23,23,23,23,-36,-37,23,23,23,-40,23,-38,9,9,9,9,74,-22,-23,-24,-25,-26,-27,-29,-30,-31,-42,-39,9,-41,23,-14,-16,-17,-18,88,-8,9,9,-13,-15,]),'PRINT':([0,2,4,5,6,7,8,16,17,20,21,22,23,24,32,39,40,44,46,48,49,50,51,54,55,56,57,58,59,60,61,62,64,66,71,75,77,78,79,80,87,89,90,93,94,],[10,10,-3,-4,-5,-6,-7,-20,-21,-28,-32,-33,-34,-35,-19,-36,-37,-40,-38,10,10,10,10,-22,-23,-24,-25,-26,-27,-29,-30,-31,-42,-39,10,-41,-14,-16,-17,-18,-8,10,10,-13,-15,]),'IF':([0,2,4,5,6,7,8,16,17,20,21,22,23,24,32,39,40,44,46,48,49,50,51,54,55,56,57,58,59,60,61,62,64,66,71,75,77,78,79,80,87,89,90,93,94,],[11,11,-3,-4,-5,-6,-7,-20,-21,-28,-32,-33,-34,-35,-19,-36,-37,-40,-38,11,11,11,11,-22,-23,-24,-25,-26,-27,-29,-30,-31,-42,-39,11,-41,-14,-16,-17,-18,-8,11,11,-13,-15,]),'LOOP':([0,2,4,5,6,7,8,16,17,20,21,22,23,24,32,39,40,44,46,48,49,50,51,54,55,56,57,58,59,60,61,62,64,66,71,75,77,78,79,80,87,89,90,93,94,],[12,12,-3,-4,-5,-6,-7,-20,-21,-28,-32,-33,-34,-35,-19,-36,-37,-40,-38,12,12,12,12,-22,-23,-24,-25,-26,-27,-29,-30,-31,-42,-39,12,-41,-14,-16,-17,-18,-8,12,12,-13,-15,]),'FUNCTION':([0,2,4,5,6,7,8,16,17,20,21,22,23,24,32,39,40,44,46,48,49,50,51,54,55,56,57,58,59,60,61,62,64,66,71,75,77,78,79,80,87,89,90,93,94,],[13,13,-3,-4,-5,-6,-7,-20,-21,-28,-32,-33,-34,-35,-19,-36,-37,-40,-38,13,13,13,13,-22,-23,-24,-25,-26,-27,-29,-30,-31,-42,-39,13,-41,-14,-16,-17,-18,-8,13,13,-13,-15,]),'CLOSE_BRACKET':([2,3,4,5,6,7,8,14,16,17,20,21,22,23,24,32,39,40,44,46,48,49,50,51,54,55,56,57,58,59,60,61,62,64,66,67,68,69,70,71,75,77,78,79,80,81,87,89,90,91,92,93,94,],[-45,-2,-3,-4,-5,-6,-7,-1,-20,-21,-28,-32,-33,-34,-35,-19,-36,-37,-40,-38,-45,-45,-45,-45,-22,-23,-24,-25,-26,-27,-29,-30,-31,-42,-39,77,78,79,80,-45,-41,-14,-16,-17,-18,87,-8,-45,-45,93,94,-13,-15,]),'ASSIGNER':([9,],[15,]),'NUMBER':([10,11,12,15,18,19,25,26,33,34,35,36,37,38,41,42,43,45,76,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'INPUT':([10,11,12,15,18,19,25,26,33,34,35,36,37,38,41,42,43,45,76,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'PLUS':([10,11,12,15,17,18,19,20,21,22,23,24,25,26,33,34,35,36,37,38,39,40,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,64,66,75,76,],[18,18,18,18,36,18,18,-28,-32,-33,-34,-35,18,18,18,18,18,18,18,18,-36,-37,18,18,18,-40,18,-38,-22,-23,-24,-25,-26,-27,-29,-30,-31,-42,-39,-41,18,]),'MINUS':([10,11,12,15,17,18,19,20,21,22,23,24,25,26,33,34,35,36,37,38,39,40,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,64,66,75,76,],[19,19,19,19,38,19,19,-28,-32,-33,-34,-35,19,19,19,19,19,19,19,19,-36,-37,19,19,19,-40,19,-38,-22,-23,-24,-25,-26,-27,-29,-30,-31,-42,-39,-41,19,]),'NOT':([10,11,12,15,18,19,25,26,33,34,35,36,37,38,41,42,43,45,76,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'OPEN_PARENT':([10,11,12,15,18,19,23,25,26,31,33,34,35,36,37,38,41,42,43,45,76,],[26,26,26,26,26,26,45,26,26,53,26,26,26,26,26,26,26,26,26,26,26,]),'error':([11,12,],[28,30,]),'GT':([16,17,20,21,22,23,24,27,29,32,39,40,44,46,47,54,55,56,57,58,59,60,61,62,64,65,66,75,84,],[33,-21,-28,-32,-33,-34,-35,33,33,33,-36,-37,-40,33,33,33,33,33,-25,33,-27,-29,-30,33,-42,33,-39,-41,33,]),'EQ':([16,17,20,21,22,23,24,27,29,32,39,40,44,46,47,54,55,56,57,58,59,60,61,62,64,65,66,75,84,],[34,-21,-28,-32,-33,-34,-35,34,34,34,-36,-37,-40,34,34,34,34,34,-25,34,-27,-29,-30,34,-42,34,-39,-41,34,]),'LT':([16,17,20,21,22,23,24,27,29,32,39,40,44,46,47,54,55,56,57,58,59,60,61,62,64,65,66,75,84,],[35,-21,-28,-32,-33,-34,-35,35,35,35,-36,-37,-40,35,35,35,35,35,-25,35,-27,-29,-30,35,-42,35,-39,-41,35,]),'OPEN_BRACKET':([17,20,21,22,23,24,27,28,29,30,39,40,44,46,52,54,55,56,57,58,59,60,61,62,64,66,73,75,82,85,86,],[-21,-28,-32,-33,-34,-35,48,49,50,51,-36,-37,-40,-38,71,-22,-23,-24,-25,-26,-27,-29,-30,-31,-42,-39,-10,-41,-9,89,90,]),'OR':([17,20,21,22,23,24,39,40,44,46,54,55,56,57,58,59,60,61,62,64,66,75,],[37,-28,-32,-33,-34,-35,-36,-37,-40,-38,-22,-23,-24,-25,-26,-27,-29,-30,-31,-42,-39,-41,]),'MULT':([17,20,21,22,23,24,39,40,44,46,54,55,56,57,58,59,60,61,62,64,66,75,],[-21,41,-32,-33,-34,-35,-36,-37,-40,-38,-22,-23,-24,-25,-26,-27,-29,-30,-31,-42,-39,-41,]),'DIV':([17,20,21,22,23,24,39,40,44,46,54,55,56,57,58,59,60,61,62,64,66,75,],[-21,42,-32,-33,-34,-35,-36,-37,-40,-38,-22,-23,-24,-25,-26,-27,-29,-30,-31,-42,-39,-41,]),'AND':([17,20,21,22,23,24,39,40,44,46,54,55,56,57,58,59,60,61,62,64,66,75,],[-21,43,-32,-33,-34,-35,-36,-37,-40,-38,-22,-23,-24,-25,-26,-27,-29,-30,-31,-42,-39,-41,]),'CLOSE_PARENT':([17,20,21,22,23,24,39,40,44,45,46,47,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,75,84,88,],[-21,-28,-32,-33,-34,-35,-36,-37,-40,64,-38,66,73,-22,-23,-24,-25,-26,-27,-29,-30,-31,75,-42,-44,-39,82,-12,-41,-43,-11,]),'COMMA':([17,20,21,22,23,24,39,40,44,46,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,75,84,88,],[-21,-28,-32,-33,-34,-35,-36,-37,-40,-38,-22,-23,-24,-25,-26,-27,-29,-30,-31,76,-42,-44,-39,83,-12,-41,-43,-11,]),'ELSE':([77,78,],[85,86,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmts':([0,2,48,49,50,51,71,89,90,],[1,14,67,68,69,70,81,91,92,]),'stmt':([0,2,48,49,50,51,71,89,90,],[2,2,2,2,2,2,2,2,2,]),'empty':([0,2,48,49,50,51,71,89,90,],[3,3,3,3,3,3,3,3,3,]),'assign':([0,2,48,49,50,51,71,89,90,],[4,4,4,4,4,4,4,4,4,]),'out':([0,2,48,49,50,51,71,89,90,],[5,5,5,5,5,5,5,5,5,]),'if':([0,2,48,49,50,51,71,89,90,],[6,6,6,6,6,6,6,6,6,]),'loop':([0,2,48,49,50,51,71,89,90,],[7,7,7,7,7,7,7,7,7,]),'funcdec':([0,2,48,49,50,51,71,89,90,],[8,8,8,8,8,8,8,8,8,]),'relexp':([10,11,12,15,25,26,33,34,35,37,43,45,76,],[16,27,29,32,46,47,54,55,56,58,62,65,84,]),'expression':([10,11,12,15,18,19,25,26,33,34,35,36,37,38,41,42,43,45,76,],[17,17,17,17,39,40,17,17,17,17,17,57,17,59,60,61,17,17,17,]),'term':([10,11,12,15,18,19,25,26,33,34,35,36,37,38,41,42,43,45,76,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'factor':([10,11,12,15,18,19,25,26,33,34,35,36,37,38,41,42,43,45,76,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'callparams':([23,],[44,]),'params':([31,],[52,]),'callargs':([45,],[63,]),'args':([53,],[72,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> stmts","S'",1,None,None,None),
  ('stmts -> stmt stmts','stmts',2,'p_stmts','parser.py',18),
  ('stmts -> empty','stmts',1,'p_stmts','parser.py',19),
  ('stmt -> assign','stmt',1,'p_stmt','parser.py',27),
  ('stmt -> out','stmt',1,'p_stmt','parser.py',28),
  ('stmt -> if','stmt',1,'p_stmt','parser.py',29),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',30),
  ('stmt -> funcdec','stmt',1,'p_stmt','parser.py',31),
  ('funcdec -> FUNCTION ID params OPEN_BRACKET stmts CLOSE_BRACKET','funcdec',6,'p_funcdec','parser.py',38),
  ('params -> OPEN_PARENT args CLOSE_PARENT','params',3,'p_params','parser.py',43),
  ('params -> OPEN_PARENT CLOSE_PARENT','params',2,'p_params','parser.py',44),
  ('args -> args COMMA ID','args',3,'p_args','parser.py',52),
  ('args -> ID','args',1,'p_args','parser.py',53),
  ('if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET','if',9,'p_if','parser.py',61),
  ('if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET','if',5,'p_if','parser.py',62),
  ('if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET','if',9,'p_if_error','parser.py',70),
  ('if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET','if',5,'p_if_error','parser.py',71),
  ('loop -> LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET','loop',5,'p_loop','parser.py',76),
  ('loop -> LOOP error OPEN_BRACKET stmts CLOSE_BRACKET','loop',5,'p_loop_error','parser.py',81),
  ('assign -> ID ASSIGNER relexp','assign',3,'p_assign','parser.py',86),
  ('out -> PRINT relexp','out',2,'p_out','parser.py',91),
  ('relexp -> expression','relexp',1,'p_relexp','parser.py',96),
  ('relexp -> relexp GT relexp','relexp',3,'p_relexp','parser.py',97),
  ('relexp -> relexp EQ relexp','relexp',3,'p_relexp','parser.py',98),
  ('relexp -> relexp LT relexp','relexp',3,'p_relexp','parser.py',99),
  ('expression -> expression PLUS expression','expression',3,'p_expression_plus','parser.py',107),
  ('expression -> expression OR relexp','expression',3,'p_expression_or','parser.py',112),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','parser.py',117),
  ('expression -> term','expression',1,'p_expression_term','parser.py',122),
  ('term -> term MULT expression','term',3,'p_term_times','parser.py',127),
  ('term -> term DIV expression','term',3,'p_term_div','parser.py',132),
  ('term -> term AND relexp','term',3,'p_term_and','parser.py',137),
  ('term -> factor','term',1,'p_term_factor','parser.py',142),
  ('factor -> NUMBER','factor',1,'p_factor_num','parser.py',147),
  ('factor -> ID','factor',1,'p_factor_id','parser.py',152),
  ('factor -> INPUT','factor',1,'p_factor_input','parser.py',157),
  ('factor -> PLUS expression','factor',2,'p_factor_sign_num','parser.py',162),
  ('factor -> MINUS expression','factor',2,'p_factor_sign_num','parser.py',163),
  ('factor -> NOT relexp','factor',2,'p_factor_sign_num','parser.py',164),
  ('factor -> OPEN_PARENT relexp CLOSE_PARENT','factor',3,'p_factor_expr','parser.py',169),
  ('factor -> ID callparams','factor',2,'p_factor_funccall','parser.py',174),
  ('callparams -> OPEN_PARENT callargs CLOSE_PARENT','callparams',3,'p_callparams','parser.py',179),
  ('callparams -> OPEN_PARENT CLOSE_PARENT','callparams',2,'p_callparams','parser.py',180),
  ('callargs -> callargs COMMA relexp','callargs',3,'p_callargs','parser.py',188),
  ('callargs -> relexp','callargs',1,'p_callargs','parser.py',189),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',197),
]
