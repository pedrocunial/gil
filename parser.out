Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> stmts
Rule 1     stmts -> stmt stmts
Rule 2     stmts -> empty
Rule 3     stmt -> assign
Rule 4     stmt -> out
Rule 5     stmt -> if
Rule 6     stmt -> loop
Rule 7     if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
Rule 8     if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET
Rule 9     if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
Rule 10    if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET
Rule 11    loop -> LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET
Rule 12    loop -> LOOP error OPEN_BRACKET stmts CLOSE_BRACKET
Rule 13    assign -> ID ASSIGNER relexp
Rule 14    out -> PRINT relexp
Rule 15    relexp -> expression
Rule 16    relexp -> relexp GT relexp
Rule 17    relexp -> relexp EQ relexp
Rule 18    relexp -> relexp LT relexp
Rule 19    expression -> expression PLUS expression
Rule 20    expression -> expression OR relexp
Rule 21    expression -> expression MINUS expression
Rule 22    expression -> term
Rule 23    term -> term MULT expression
Rule 24    term -> term DIV expression
Rule 25    term -> term AND relexp
Rule 26    term -> factor
Rule 27    factor -> NUMBER
Rule 28    factor -> ID
Rule 29    factor -> INPUT
Rule 30    factor -> PLUS expression
Rule 31    factor -> MINUS expression
Rule 32    factor -> NOT relexp
Rule 33    factor -> OPEN_PARENT relexp CLOSE_PARENT
Rule 34    empty -> <empty>

Terminals, with rules where they appear

AND                  : 25
ASSIGNER             : 13
CLOSE_BRACKET        : 7 7 8 9 9 10 11 12
CLOSE_PARENT         : 33
COMMENT              : 
DIV                  : 24
ELSE                 : 7 9
EQ                   : 17
GT                   : 16
ID                   : 13 28
IF                   : 7 8 9 10
INPUT                : 29
LOOP                 : 11 12
LT                   : 18
MINUS                : 21 31
MULT                 : 23
NOT                  : 32
NUMBER               : 27
OPEN_BRACKET         : 7 7 8 9 9 10 11 12
OPEN_PARENT          : 33
OR                   : 20
PLUS                 : 19 30
PRINT                : 14
error                : 9 10 12

Nonterminals, with rules where they appear

assign               : 3
empty                : 2
expression           : 15 19 19 20 21 21 23 24 30 31
factor               : 26
if                   : 5
loop                 : 6
out                  : 4
relexp               : 7 8 11 13 14 16 16 17 17 18 18 20 25 32 33
stmt                 : 1
stmts                : 1 7 7 8 9 9 10 11 12 0
term                 : 22 23 24 25

Parsing method: LALR

state 0

    (0) S' -> . stmts
    (1) stmts -> . stmt stmts
    (2) stmts -> . empty
    (3) stmt -> . assign
    (4) stmt -> . out
    (5) stmt -> . if
    (6) stmt -> . loop
    (34) empty -> .
    (13) assign -> . ID ASSIGNER relexp
    (14) out -> . PRINT relexp
    (7) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (8) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (9) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (10) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET
    (11) loop -> . LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (12) loop -> . LOOP error OPEN_BRACKET stmts CLOSE_BRACKET

    $end            reduce using rule 34 (empty -> .)
    ID              shift and go to state 8
    PRINT           shift and go to state 9
    IF              shift and go to state 10
    LOOP            shift and go to state 11

    stmts                          shift and go to state 1
    stmt                           shift and go to state 2
    empty                          shift and go to state 3
    assign                         shift and go to state 4
    out                            shift and go to state 5
    if                             shift and go to state 6
    loop                           shift and go to state 7

state 1

    (0) S' -> stmts .



state 2

    (1) stmts -> stmt . stmts
    (1) stmts -> . stmt stmts
    (2) stmts -> . empty
    (3) stmt -> . assign
    (4) stmt -> . out
    (5) stmt -> . if
    (6) stmt -> . loop
    (34) empty -> .
    (13) assign -> . ID ASSIGNER relexp
    (14) out -> . PRINT relexp
    (7) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (8) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (9) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (10) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET
    (11) loop -> . LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (12) loop -> . LOOP error OPEN_BRACKET stmts CLOSE_BRACKET

    $end            reduce using rule 34 (empty -> .)
    CLOSE_BRACKET   reduce using rule 34 (empty -> .)
    ID              shift and go to state 8
    PRINT           shift and go to state 9
    IF              shift and go to state 10
    LOOP            shift and go to state 11

    stmt                           shift and go to state 2
    stmts                          shift and go to state 12
    empty                          shift and go to state 3
    assign                         shift and go to state 4
    out                            shift and go to state 5
    if                             shift and go to state 6
    loop                           shift and go to state 7

state 3

    (2) stmts -> empty .

    $end            reduce using rule 2 (stmts -> empty .)
    CLOSE_BRACKET   reduce using rule 2 (stmts -> empty .)


state 4

    (3) stmt -> assign .

    ID              reduce using rule 3 (stmt -> assign .)
    PRINT           reduce using rule 3 (stmt -> assign .)
    IF              reduce using rule 3 (stmt -> assign .)
    LOOP            reduce using rule 3 (stmt -> assign .)
    $end            reduce using rule 3 (stmt -> assign .)
    CLOSE_BRACKET   reduce using rule 3 (stmt -> assign .)


state 5

    (4) stmt -> out .

    ID              reduce using rule 4 (stmt -> out .)
    PRINT           reduce using rule 4 (stmt -> out .)
    IF              reduce using rule 4 (stmt -> out .)
    LOOP            reduce using rule 4 (stmt -> out .)
    $end            reduce using rule 4 (stmt -> out .)
    CLOSE_BRACKET   reduce using rule 4 (stmt -> out .)


state 6

    (5) stmt -> if .

    ID              reduce using rule 5 (stmt -> if .)
    PRINT           reduce using rule 5 (stmt -> if .)
    IF              reduce using rule 5 (stmt -> if .)
    LOOP            reduce using rule 5 (stmt -> if .)
    $end            reduce using rule 5 (stmt -> if .)
    CLOSE_BRACKET   reduce using rule 5 (stmt -> if .)


state 7

    (6) stmt -> loop .

    ID              reduce using rule 6 (stmt -> loop .)
    PRINT           reduce using rule 6 (stmt -> loop .)
    IF              reduce using rule 6 (stmt -> loop .)
    LOOP            reduce using rule 6 (stmt -> loop .)
    $end            reduce using rule 6 (stmt -> loop .)
    CLOSE_BRACKET   reduce using rule 6 (stmt -> loop .)


state 8

    (13) assign -> ID . ASSIGNER relexp

    ASSIGNER        shift and go to state 13


state 9

    (14) out -> PRINT . relexp
    (15) relexp -> . expression
    (16) relexp -> . relexp GT relexp
    (17) relexp -> . relexp EQ relexp
    (18) relexp -> . relexp LT relexp
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    relexp                         shift and go to state 14
    expression                     shift and go to state 15
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 10

    (7) if -> IF . relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (8) if -> IF . relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (9) if -> IF . error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (10) if -> IF . error OPEN_BRACKET stmts CLOSE_BRACKET
    (15) relexp -> . expression
    (16) relexp -> . relexp GT relexp
    (17) relexp -> . relexp EQ relexp
    (18) relexp -> . relexp LT relexp
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    error           shift and go to state 26
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    relexp                         shift and go to state 25
    expression                     shift and go to state 15
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 11

    (11) loop -> LOOP . relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (12) loop -> LOOP . error OPEN_BRACKET stmts CLOSE_BRACKET
    (15) relexp -> . expression
    (16) relexp -> . relexp GT relexp
    (17) relexp -> . relexp EQ relexp
    (18) relexp -> . relexp LT relexp
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    error           shift and go to state 28
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    relexp                         shift and go to state 27
    expression                     shift and go to state 15
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 12

    (1) stmts -> stmt stmts .

    $end            reduce using rule 1 (stmts -> stmt stmts .)
    CLOSE_BRACKET   reduce using rule 1 (stmts -> stmt stmts .)


state 13

    (13) assign -> ID ASSIGNER . relexp
    (15) relexp -> . expression
    (16) relexp -> . relexp GT relexp
    (17) relexp -> . relexp EQ relexp
    (18) relexp -> . relexp LT relexp
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    relexp                         shift and go to state 29
    expression                     shift and go to state 15
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 14

    (14) out -> PRINT relexp .
    (16) relexp -> relexp . GT relexp
    (17) relexp -> relexp . EQ relexp
    (18) relexp -> relexp . LT relexp

    ID              reduce using rule 14 (out -> PRINT relexp .)
    PRINT           reduce using rule 14 (out -> PRINT relexp .)
    IF              reduce using rule 14 (out -> PRINT relexp .)
    LOOP            reduce using rule 14 (out -> PRINT relexp .)
    $end            reduce using rule 14 (out -> PRINT relexp .)
    CLOSE_BRACKET   reduce using rule 14 (out -> PRINT relexp .)
    GT              shift and go to state 30
    EQ              shift and go to state 31
    LT              shift and go to state 32


state 15

    (15) relexp -> expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . OR relexp
    (21) expression -> expression . MINUS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    GT              reduce using rule 15 (relexp -> expression .)
    EQ              reduce using rule 15 (relexp -> expression .)
    LT              reduce using rule 15 (relexp -> expression .)
    ID              reduce using rule 15 (relexp -> expression .)
    PRINT           reduce using rule 15 (relexp -> expression .)
    IF              reduce using rule 15 (relexp -> expression .)
    LOOP            reduce using rule 15 (relexp -> expression .)
    $end            reduce using rule 15 (relexp -> expression .)
    CLOSE_BRACKET   reduce using rule 15 (relexp -> expression .)
    OPEN_BRACKET    reduce using rule 15 (relexp -> expression .)
    MULT            reduce using rule 15 (relexp -> expression .)
    DIV             reduce using rule 15 (relexp -> expression .)
    AND             reduce using rule 15 (relexp -> expression .)
    CLOSE_PARENT    reduce using rule 15 (relexp -> expression .)
    PLUS            shift and go to state 33
    OR              shift and go to state 34
    MINUS           shift and go to state 35

  ! PLUS            [ reduce using rule 15 (relexp -> expression .) ]
  ! OR              [ reduce using rule 15 (relexp -> expression .) ]
  ! MINUS           [ reduce using rule 15 (relexp -> expression .) ]


state 16

    (30) factor -> PLUS . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    expression                     shift and go to state 36
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 17

    (31) factor -> MINUS . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    expression                     shift and go to state 37
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 18

    (22) expression -> term .
    (23) term -> term . MULT expression
    (24) term -> term . DIV expression
    (25) term -> term . AND relexp

  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PLUS            reduce using rule 22 (expression -> term .)
    OR              reduce using rule 22 (expression -> term .)
    MINUS           reduce using rule 22 (expression -> term .)
    GT              reduce using rule 22 (expression -> term .)
    EQ              reduce using rule 22 (expression -> term .)
    LT              reduce using rule 22 (expression -> term .)
    ID              reduce using rule 22 (expression -> term .)
    PRINT           reduce using rule 22 (expression -> term .)
    IF              reduce using rule 22 (expression -> term .)
    LOOP            reduce using rule 22 (expression -> term .)
    $end            reduce using rule 22 (expression -> term .)
    CLOSE_BRACKET   reduce using rule 22 (expression -> term .)
    OPEN_BRACKET    reduce using rule 22 (expression -> term .)
    CLOSE_PARENT    reduce using rule 22 (expression -> term .)
    MULT            shift and go to state 38
    DIV             shift and go to state 39
    AND             shift and go to state 40

  ! MULT            [ reduce using rule 22 (expression -> term .) ]
  ! DIV             [ reduce using rule 22 (expression -> term .) ]
  ! AND             [ reduce using rule 22 (expression -> term .) ]


state 19

    (26) term -> factor .

    MULT            reduce using rule 26 (term -> factor .)
    DIV             reduce using rule 26 (term -> factor .)
    AND             reduce using rule 26 (term -> factor .)
    PLUS            reduce using rule 26 (term -> factor .)
    OR              reduce using rule 26 (term -> factor .)
    MINUS           reduce using rule 26 (term -> factor .)
    GT              reduce using rule 26 (term -> factor .)
    EQ              reduce using rule 26 (term -> factor .)
    LT              reduce using rule 26 (term -> factor .)
    ID              reduce using rule 26 (term -> factor .)
    PRINT           reduce using rule 26 (term -> factor .)
    IF              reduce using rule 26 (term -> factor .)
    LOOP            reduce using rule 26 (term -> factor .)
    $end            reduce using rule 26 (term -> factor .)
    CLOSE_BRACKET   reduce using rule 26 (term -> factor .)
    OPEN_BRACKET    reduce using rule 26 (term -> factor .)
    CLOSE_PARENT    reduce using rule 26 (term -> factor .)


state 20

    (27) factor -> NUMBER .

    MULT            reduce using rule 27 (factor -> NUMBER .)
    DIV             reduce using rule 27 (factor -> NUMBER .)
    AND             reduce using rule 27 (factor -> NUMBER .)
    PLUS            reduce using rule 27 (factor -> NUMBER .)
    OR              reduce using rule 27 (factor -> NUMBER .)
    MINUS           reduce using rule 27 (factor -> NUMBER .)
    GT              reduce using rule 27 (factor -> NUMBER .)
    EQ              reduce using rule 27 (factor -> NUMBER .)
    LT              reduce using rule 27 (factor -> NUMBER .)
    ID              reduce using rule 27 (factor -> NUMBER .)
    PRINT           reduce using rule 27 (factor -> NUMBER .)
    IF              reduce using rule 27 (factor -> NUMBER .)
    LOOP            reduce using rule 27 (factor -> NUMBER .)
    $end            reduce using rule 27 (factor -> NUMBER .)
    CLOSE_BRACKET   reduce using rule 27 (factor -> NUMBER .)
    OPEN_BRACKET    reduce using rule 27 (factor -> NUMBER .)
    CLOSE_PARENT    reduce using rule 27 (factor -> NUMBER .)


state 21

    (28) factor -> ID .

    MULT            reduce using rule 28 (factor -> ID .)
    DIV             reduce using rule 28 (factor -> ID .)
    AND             reduce using rule 28 (factor -> ID .)
    PLUS            reduce using rule 28 (factor -> ID .)
    OR              reduce using rule 28 (factor -> ID .)
    MINUS           reduce using rule 28 (factor -> ID .)
    GT              reduce using rule 28 (factor -> ID .)
    EQ              reduce using rule 28 (factor -> ID .)
    LT              reduce using rule 28 (factor -> ID .)
    ID              reduce using rule 28 (factor -> ID .)
    PRINT           reduce using rule 28 (factor -> ID .)
    IF              reduce using rule 28 (factor -> ID .)
    LOOP            reduce using rule 28 (factor -> ID .)
    $end            reduce using rule 28 (factor -> ID .)
    CLOSE_BRACKET   reduce using rule 28 (factor -> ID .)
    OPEN_BRACKET    reduce using rule 28 (factor -> ID .)
    CLOSE_PARENT    reduce using rule 28 (factor -> ID .)


state 22

    (29) factor -> INPUT .

    MULT            reduce using rule 29 (factor -> INPUT .)
    DIV             reduce using rule 29 (factor -> INPUT .)
    AND             reduce using rule 29 (factor -> INPUT .)
    PLUS            reduce using rule 29 (factor -> INPUT .)
    OR              reduce using rule 29 (factor -> INPUT .)
    MINUS           reduce using rule 29 (factor -> INPUT .)
    GT              reduce using rule 29 (factor -> INPUT .)
    EQ              reduce using rule 29 (factor -> INPUT .)
    LT              reduce using rule 29 (factor -> INPUT .)
    ID              reduce using rule 29 (factor -> INPUT .)
    PRINT           reduce using rule 29 (factor -> INPUT .)
    IF              reduce using rule 29 (factor -> INPUT .)
    LOOP            reduce using rule 29 (factor -> INPUT .)
    $end            reduce using rule 29 (factor -> INPUT .)
    CLOSE_BRACKET   reduce using rule 29 (factor -> INPUT .)
    OPEN_BRACKET    reduce using rule 29 (factor -> INPUT .)
    CLOSE_PARENT    reduce using rule 29 (factor -> INPUT .)


state 23

    (32) factor -> NOT . relexp
    (15) relexp -> . expression
    (16) relexp -> . relexp GT relexp
    (17) relexp -> . relexp EQ relexp
    (18) relexp -> . relexp LT relexp
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    relexp                         shift and go to state 41
    expression                     shift and go to state 15
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 24

    (33) factor -> OPEN_PARENT . relexp CLOSE_PARENT
    (15) relexp -> . expression
    (16) relexp -> . relexp GT relexp
    (17) relexp -> . relexp EQ relexp
    (18) relexp -> . relexp LT relexp
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    relexp                         shift and go to state 42
    expression                     shift and go to state 15
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 25

    (7) if -> IF relexp . OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (8) if -> IF relexp . OPEN_BRACKET stmts CLOSE_BRACKET
    (16) relexp -> relexp . GT relexp
    (17) relexp -> relexp . EQ relexp
    (18) relexp -> relexp . LT relexp

    OPEN_BRACKET    shift and go to state 43
    GT              shift and go to state 30
    EQ              shift and go to state 31
    LT              shift and go to state 32


state 26

    (9) if -> IF error . OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (10) if -> IF error . OPEN_BRACKET stmts CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 44


state 27

    (11) loop -> LOOP relexp . OPEN_BRACKET stmts CLOSE_BRACKET
    (16) relexp -> relexp . GT relexp
    (17) relexp -> relexp . EQ relexp
    (18) relexp -> relexp . LT relexp

    OPEN_BRACKET    shift and go to state 45
    GT              shift and go to state 30
    EQ              shift and go to state 31
    LT              shift and go to state 32


state 28

    (12) loop -> LOOP error . OPEN_BRACKET stmts CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 46


state 29

    (13) assign -> ID ASSIGNER relexp .
    (16) relexp -> relexp . GT relexp
    (17) relexp -> relexp . EQ relexp
    (18) relexp -> relexp . LT relexp

    ID              reduce using rule 13 (assign -> ID ASSIGNER relexp .)
    PRINT           reduce using rule 13 (assign -> ID ASSIGNER relexp .)
    IF              reduce using rule 13 (assign -> ID ASSIGNER relexp .)
    LOOP            reduce using rule 13 (assign -> ID ASSIGNER relexp .)
    $end            reduce using rule 13 (assign -> ID ASSIGNER relexp .)
    CLOSE_BRACKET   reduce using rule 13 (assign -> ID ASSIGNER relexp .)
    GT              shift and go to state 30
    EQ              shift and go to state 31
    LT              shift and go to state 32


state 30

    (16) relexp -> relexp GT . relexp
    (15) relexp -> . expression
    (16) relexp -> . relexp GT relexp
    (17) relexp -> . relexp EQ relexp
    (18) relexp -> . relexp LT relexp
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    relexp                         shift and go to state 47
    expression                     shift and go to state 15
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 31

    (17) relexp -> relexp EQ . relexp
    (15) relexp -> . expression
    (16) relexp -> . relexp GT relexp
    (17) relexp -> . relexp EQ relexp
    (18) relexp -> . relexp LT relexp
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    relexp                         shift and go to state 48
    expression                     shift and go to state 15
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 32

    (18) relexp -> relexp LT . relexp
    (15) relexp -> . expression
    (16) relexp -> . relexp GT relexp
    (17) relexp -> . relexp EQ relexp
    (18) relexp -> . relexp LT relexp
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    relexp                         shift and go to state 49
    expression                     shift and go to state 15
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 33

    (19) expression -> expression PLUS . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    expression                     shift and go to state 50
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 34

    (20) expression -> expression OR . relexp
    (15) relexp -> . expression
    (16) relexp -> . relexp GT relexp
    (17) relexp -> . relexp EQ relexp
    (18) relexp -> . relexp LT relexp
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    expression                     shift and go to state 15
    relexp                         shift and go to state 51
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 35

    (21) expression -> expression MINUS . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    expression                     shift and go to state 52
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 36

    (30) factor -> PLUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . OR relexp
    (21) expression -> expression . MINUS expression

    MULT            reduce using rule 30 (factor -> PLUS expression .)
    DIV             reduce using rule 30 (factor -> PLUS expression .)
    AND             reduce using rule 30 (factor -> PLUS expression .)
    PLUS            reduce using rule 30 (factor -> PLUS expression .)
    OR              reduce using rule 30 (factor -> PLUS expression .)
    MINUS           reduce using rule 30 (factor -> PLUS expression .)
    GT              reduce using rule 30 (factor -> PLUS expression .)
    EQ              reduce using rule 30 (factor -> PLUS expression .)
    LT              reduce using rule 30 (factor -> PLUS expression .)
    ID              reduce using rule 30 (factor -> PLUS expression .)
    PRINT           reduce using rule 30 (factor -> PLUS expression .)
    IF              reduce using rule 30 (factor -> PLUS expression .)
    LOOP            reduce using rule 30 (factor -> PLUS expression .)
    $end            reduce using rule 30 (factor -> PLUS expression .)
    CLOSE_BRACKET   reduce using rule 30 (factor -> PLUS expression .)
    OPEN_BRACKET    reduce using rule 30 (factor -> PLUS expression .)
    CLOSE_PARENT    reduce using rule 30 (factor -> PLUS expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 37

    (31) factor -> MINUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . OR relexp
    (21) expression -> expression . MINUS expression

    MULT            reduce using rule 31 (factor -> MINUS expression .)
    DIV             reduce using rule 31 (factor -> MINUS expression .)
    AND             reduce using rule 31 (factor -> MINUS expression .)
    PLUS            reduce using rule 31 (factor -> MINUS expression .)
    OR              reduce using rule 31 (factor -> MINUS expression .)
    MINUS           reduce using rule 31 (factor -> MINUS expression .)
    GT              reduce using rule 31 (factor -> MINUS expression .)
    EQ              reduce using rule 31 (factor -> MINUS expression .)
    LT              reduce using rule 31 (factor -> MINUS expression .)
    ID              reduce using rule 31 (factor -> MINUS expression .)
    PRINT           reduce using rule 31 (factor -> MINUS expression .)
    IF              reduce using rule 31 (factor -> MINUS expression .)
    LOOP            reduce using rule 31 (factor -> MINUS expression .)
    $end            reduce using rule 31 (factor -> MINUS expression .)
    CLOSE_BRACKET   reduce using rule 31 (factor -> MINUS expression .)
    OPEN_BRACKET    reduce using rule 31 (factor -> MINUS expression .)
    CLOSE_PARENT    reduce using rule 31 (factor -> MINUS expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 38

    (23) term -> term MULT . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    term                           shift and go to state 18
    expression                     shift and go to state 53
    factor                         shift and go to state 19

state 39

    (24) term -> term DIV . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    term                           shift and go to state 18
    expression                     shift and go to state 54
    factor                         shift and go to state 19

state 40

    (25) term -> term AND . relexp
    (15) relexp -> . expression
    (16) relexp -> . relexp GT relexp
    (17) relexp -> . relexp EQ relexp
    (18) relexp -> . relexp LT relexp
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression OR relexp
    (21) expression -> . expression MINUS expression
    (22) expression -> . term
    (23) term -> . term MULT expression
    (24) term -> . term DIV expression
    (25) term -> . term AND relexp
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . INPUT
    (30) factor -> . PLUS expression
    (31) factor -> . MINUS expression
    (32) factor -> . NOT relexp
    (33) factor -> . OPEN_PARENT relexp CLOSE_PARENT

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    INPUT           shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    NOT             shift and go to state 23
    OPEN_PARENT     shift and go to state 24

    term                           shift and go to state 18
    relexp                         shift and go to state 55
    expression                     shift and go to state 15
    factor                         shift and go to state 19

state 41

    (32) factor -> NOT relexp .
    (16) relexp -> relexp . GT relexp
    (17) relexp -> relexp . EQ relexp
    (18) relexp -> relexp . LT relexp

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
    MULT            reduce using rule 32 (factor -> NOT relexp .)
    DIV             reduce using rule 32 (factor -> NOT relexp .)
    AND             reduce using rule 32 (factor -> NOT relexp .)
    PLUS            reduce using rule 32 (factor -> NOT relexp .)
    OR              reduce using rule 32 (factor -> NOT relexp .)
    MINUS           reduce using rule 32 (factor -> NOT relexp .)
    ID              reduce using rule 32 (factor -> NOT relexp .)
    PRINT           reduce using rule 32 (factor -> NOT relexp .)
    IF              reduce using rule 32 (factor -> NOT relexp .)
    LOOP            reduce using rule 32 (factor -> NOT relexp .)
    $end            reduce using rule 32 (factor -> NOT relexp .)
    CLOSE_BRACKET   reduce using rule 32 (factor -> NOT relexp .)
    OPEN_BRACKET    reduce using rule 32 (factor -> NOT relexp .)
    CLOSE_PARENT    reduce using rule 32 (factor -> NOT relexp .)
    GT              shift and go to state 30
    EQ              shift and go to state 31
    LT              shift and go to state 32

  ! GT              [ reduce using rule 32 (factor -> NOT relexp .) ]
  ! EQ              [ reduce using rule 32 (factor -> NOT relexp .) ]
  ! LT              [ reduce using rule 32 (factor -> NOT relexp .) ]


state 42

    (33) factor -> OPEN_PARENT relexp . CLOSE_PARENT
    (16) relexp -> relexp . GT relexp
    (17) relexp -> relexp . EQ relexp
    (18) relexp -> relexp . LT relexp

    CLOSE_PARENT    shift and go to state 56
    GT              shift and go to state 30
    EQ              shift and go to state 31
    LT              shift and go to state 32


state 43

    (7) if -> IF relexp OPEN_BRACKET . stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (8) if -> IF relexp OPEN_BRACKET . stmts CLOSE_BRACKET
    (1) stmts -> . stmt stmts
    (2) stmts -> . empty
    (3) stmt -> . assign
    (4) stmt -> . out
    (5) stmt -> . if
    (6) stmt -> . loop
    (34) empty -> .
    (13) assign -> . ID ASSIGNER relexp
    (14) out -> . PRINT relexp
    (7) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (8) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (9) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (10) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET
    (11) loop -> . LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (12) loop -> . LOOP error OPEN_BRACKET stmts CLOSE_BRACKET

    CLOSE_BRACKET   reduce using rule 34 (empty -> .)
    ID              shift and go to state 8
    PRINT           shift and go to state 9
    IF              shift and go to state 10
    LOOP            shift and go to state 11

    stmts                          shift and go to state 57
    stmt                           shift and go to state 2
    empty                          shift and go to state 3
    assign                         shift and go to state 4
    out                            shift and go to state 5
    if                             shift and go to state 6
    loop                           shift and go to state 7

state 44

    (9) if -> IF error OPEN_BRACKET . stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (10) if -> IF error OPEN_BRACKET . stmts CLOSE_BRACKET
    (1) stmts -> . stmt stmts
    (2) stmts -> . empty
    (3) stmt -> . assign
    (4) stmt -> . out
    (5) stmt -> . if
    (6) stmt -> . loop
    (34) empty -> .
    (13) assign -> . ID ASSIGNER relexp
    (14) out -> . PRINT relexp
    (7) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (8) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (9) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (10) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET
    (11) loop -> . LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (12) loop -> . LOOP error OPEN_BRACKET stmts CLOSE_BRACKET

    CLOSE_BRACKET   reduce using rule 34 (empty -> .)
    ID              shift and go to state 8
    PRINT           shift and go to state 9
    IF              shift and go to state 10
    LOOP            shift and go to state 11

    stmts                          shift and go to state 58
    stmt                           shift and go to state 2
    empty                          shift and go to state 3
    assign                         shift and go to state 4
    out                            shift and go to state 5
    if                             shift and go to state 6
    loop                           shift and go to state 7

state 45

    (11) loop -> LOOP relexp OPEN_BRACKET . stmts CLOSE_BRACKET
    (1) stmts -> . stmt stmts
    (2) stmts -> . empty
    (3) stmt -> . assign
    (4) stmt -> . out
    (5) stmt -> . if
    (6) stmt -> . loop
    (34) empty -> .
    (13) assign -> . ID ASSIGNER relexp
    (14) out -> . PRINT relexp
    (7) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (8) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (9) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (10) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET
    (11) loop -> . LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (12) loop -> . LOOP error OPEN_BRACKET stmts CLOSE_BRACKET

    CLOSE_BRACKET   reduce using rule 34 (empty -> .)
    ID              shift and go to state 8
    PRINT           shift and go to state 9
    IF              shift and go to state 10
    LOOP            shift and go to state 11

    stmts                          shift and go to state 59
    stmt                           shift and go to state 2
    empty                          shift and go to state 3
    assign                         shift and go to state 4
    out                            shift and go to state 5
    if                             shift and go to state 6
    loop                           shift and go to state 7

state 46

    (12) loop -> LOOP error OPEN_BRACKET . stmts CLOSE_BRACKET
    (1) stmts -> . stmt stmts
    (2) stmts -> . empty
    (3) stmt -> . assign
    (4) stmt -> . out
    (5) stmt -> . if
    (6) stmt -> . loop
    (34) empty -> .
    (13) assign -> . ID ASSIGNER relexp
    (14) out -> . PRINT relexp
    (7) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (8) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (9) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (10) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET
    (11) loop -> . LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (12) loop -> . LOOP error OPEN_BRACKET stmts CLOSE_BRACKET

    CLOSE_BRACKET   reduce using rule 34 (empty -> .)
    ID              shift and go to state 8
    PRINT           shift and go to state 9
    IF              shift and go to state 10
    LOOP            shift and go to state 11

    stmts                          shift and go to state 60
    stmt                           shift and go to state 2
    empty                          shift and go to state 3
    assign                         shift and go to state 4
    out                            shift and go to state 5
    if                             shift and go to state 6
    loop                           shift and go to state 7

state 47

    (16) relexp -> relexp GT relexp .
    (16) relexp -> relexp . GT relexp
    (17) relexp -> relexp . EQ relexp
    (18) relexp -> relexp . LT relexp

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
    ID              reduce using rule 16 (relexp -> relexp GT relexp .)
    PRINT           reduce using rule 16 (relexp -> relexp GT relexp .)
    IF              reduce using rule 16 (relexp -> relexp GT relexp .)
    LOOP            reduce using rule 16 (relexp -> relexp GT relexp .)
    $end            reduce using rule 16 (relexp -> relexp GT relexp .)
    CLOSE_BRACKET   reduce using rule 16 (relexp -> relexp GT relexp .)
    OPEN_BRACKET    reduce using rule 16 (relexp -> relexp GT relexp .)
    PLUS            reduce using rule 16 (relexp -> relexp GT relexp .)
    OR              reduce using rule 16 (relexp -> relexp GT relexp .)
    MINUS           reduce using rule 16 (relexp -> relexp GT relexp .)
    MULT            reduce using rule 16 (relexp -> relexp GT relexp .)
    DIV             reduce using rule 16 (relexp -> relexp GT relexp .)
    AND             reduce using rule 16 (relexp -> relexp GT relexp .)
    CLOSE_PARENT    reduce using rule 16 (relexp -> relexp GT relexp .)
    GT              shift and go to state 30
    EQ              shift and go to state 31
    LT              shift and go to state 32

  ! GT              [ reduce using rule 16 (relexp -> relexp GT relexp .) ]
  ! EQ              [ reduce using rule 16 (relexp -> relexp GT relexp .) ]
  ! LT              [ reduce using rule 16 (relexp -> relexp GT relexp .) ]


state 48

    (17) relexp -> relexp EQ relexp .
    (16) relexp -> relexp . GT relexp
    (17) relexp -> relexp . EQ relexp
    (18) relexp -> relexp . LT relexp

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
    ID              reduce using rule 17 (relexp -> relexp EQ relexp .)
    PRINT           reduce using rule 17 (relexp -> relexp EQ relexp .)
    IF              reduce using rule 17 (relexp -> relexp EQ relexp .)
    LOOP            reduce using rule 17 (relexp -> relexp EQ relexp .)
    $end            reduce using rule 17 (relexp -> relexp EQ relexp .)
    CLOSE_BRACKET   reduce using rule 17 (relexp -> relexp EQ relexp .)
    OPEN_BRACKET    reduce using rule 17 (relexp -> relexp EQ relexp .)
    PLUS            reduce using rule 17 (relexp -> relexp EQ relexp .)
    OR              reduce using rule 17 (relexp -> relexp EQ relexp .)
    MINUS           reduce using rule 17 (relexp -> relexp EQ relexp .)
    MULT            reduce using rule 17 (relexp -> relexp EQ relexp .)
    DIV             reduce using rule 17 (relexp -> relexp EQ relexp .)
    AND             reduce using rule 17 (relexp -> relexp EQ relexp .)
    CLOSE_PARENT    reduce using rule 17 (relexp -> relexp EQ relexp .)
    GT              shift and go to state 30
    EQ              shift and go to state 31
    LT              shift and go to state 32

  ! GT              [ reduce using rule 17 (relexp -> relexp EQ relexp .) ]
  ! EQ              [ reduce using rule 17 (relexp -> relexp EQ relexp .) ]
  ! LT              [ reduce using rule 17 (relexp -> relexp EQ relexp .) ]


state 49

    (18) relexp -> relexp LT relexp .
    (16) relexp -> relexp . GT relexp
    (17) relexp -> relexp . EQ relexp
    (18) relexp -> relexp . LT relexp

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
    ID              reduce using rule 18 (relexp -> relexp LT relexp .)
    PRINT           reduce using rule 18 (relexp -> relexp LT relexp .)
    IF              reduce using rule 18 (relexp -> relexp LT relexp .)
    LOOP            reduce using rule 18 (relexp -> relexp LT relexp .)
    $end            reduce using rule 18 (relexp -> relexp LT relexp .)
    CLOSE_BRACKET   reduce using rule 18 (relexp -> relexp LT relexp .)
    OPEN_BRACKET    reduce using rule 18 (relexp -> relexp LT relexp .)
    PLUS            reduce using rule 18 (relexp -> relexp LT relexp .)
    OR              reduce using rule 18 (relexp -> relexp LT relexp .)
    MINUS           reduce using rule 18 (relexp -> relexp LT relexp .)
    MULT            reduce using rule 18 (relexp -> relexp LT relexp .)
    DIV             reduce using rule 18 (relexp -> relexp LT relexp .)
    AND             reduce using rule 18 (relexp -> relexp LT relexp .)
    CLOSE_PARENT    reduce using rule 18 (relexp -> relexp LT relexp .)
    GT              shift and go to state 30
    EQ              shift and go to state 31
    LT              shift and go to state 32

  ! GT              [ reduce using rule 18 (relexp -> relexp LT relexp .) ]
  ! EQ              [ reduce using rule 18 (relexp -> relexp LT relexp .) ]
  ! LT              [ reduce using rule 18 (relexp -> relexp LT relexp .) ]


state 50

    (19) expression -> expression PLUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . OR relexp
    (21) expression -> expression . MINUS expression

    PLUS            reduce using rule 19 (expression -> expression PLUS expression .)
    OR              reduce using rule 19 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 19 (expression -> expression PLUS expression .)
    GT              reduce using rule 19 (expression -> expression PLUS expression .)
    EQ              reduce using rule 19 (expression -> expression PLUS expression .)
    LT              reduce using rule 19 (expression -> expression PLUS expression .)
    ID              reduce using rule 19 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 19 (expression -> expression PLUS expression .)
    IF              reduce using rule 19 (expression -> expression PLUS expression .)
    LOOP            reduce using rule 19 (expression -> expression PLUS expression .)
    $end            reduce using rule 19 (expression -> expression PLUS expression .)
    CLOSE_BRACKET   reduce using rule 19 (expression -> expression PLUS expression .)
    OPEN_BRACKET    reduce using rule 19 (expression -> expression PLUS expression .)
    MULT            reduce using rule 19 (expression -> expression PLUS expression .)
    DIV             reduce using rule 19 (expression -> expression PLUS expression .)
    AND             reduce using rule 19 (expression -> expression PLUS expression .)
    CLOSE_PARENT    reduce using rule 19 (expression -> expression PLUS expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 51

    (20) expression -> expression OR relexp .
    (16) relexp -> relexp . GT relexp
    (17) relexp -> relexp . EQ relexp
    (18) relexp -> relexp . LT relexp

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
    PLUS            reduce using rule 20 (expression -> expression OR relexp .)
    OR              reduce using rule 20 (expression -> expression OR relexp .)
    MINUS           reduce using rule 20 (expression -> expression OR relexp .)
    ID              reduce using rule 20 (expression -> expression OR relexp .)
    PRINT           reduce using rule 20 (expression -> expression OR relexp .)
    IF              reduce using rule 20 (expression -> expression OR relexp .)
    LOOP            reduce using rule 20 (expression -> expression OR relexp .)
    $end            reduce using rule 20 (expression -> expression OR relexp .)
    CLOSE_BRACKET   reduce using rule 20 (expression -> expression OR relexp .)
    OPEN_BRACKET    reduce using rule 20 (expression -> expression OR relexp .)
    MULT            reduce using rule 20 (expression -> expression OR relexp .)
    DIV             reduce using rule 20 (expression -> expression OR relexp .)
    AND             reduce using rule 20 (expression -> expression OR relexp .)
    CLOSE_PARENT    reduce using rule 20 (expression -> expression OR relexp .)
    GT              shift and go to state 30
    EQ              shift and go to state 31
    LT              shift and go to state 32

  ! GT              [ reduce using rule 20 (expression -> expression OR relexp .) ]
  ! EQ              [ reduce using rule 20 (expression -> expression OR relexp .) ]
  ! LT              [ reduce using rule 20 (expression -> expression OR relexp .) ]


state 52

    (21) expression -> expression MINUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . OR relexp
    (21) expression -> expression . MINUS expression

    PLUS            reduce using rule 21 (expression -> expression MINUS expression .)
    OR              reduce using rule 21 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 21 (expression -> expression MINUS expression .)
    GT              reduce using rule 21 (expression -> expression MINUS expression .)
    EQ              reduce using rule 21 (expression -> expression MINUS expression .)
    LT              reduce using rule 21 (expression -> expression MINUS expression .)
    ID              reduce using rule 21 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 21 (expression -> expression MINUS expression .)
    IF              reduce using rule 21 (expression -> expression MINUS expression .)
    LOOP            reduce using rule 21 (expression -> expression MINUS expression .)
    $end            reduce using rule 21 (expression -> expression MINUS expression .)
    CLOSE_BRACKET   reduce using rule 21 (expression -> expression MINUS expression .)
    OPEN_BRACKET    reduce using rule 21 (expression -> expression MINUS expression .)
    MULT            reduce using rule 21 (expression -> expression MINUS expression .)
    DIV             reduce using rule 21 (expression -> expression MINUS expression .)
    AND             reduce using rule 21 (expression -> expression MINUS expression .)
    CLOSE_PARENT    reduce using rule 21 (expression -> expression MINUS expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 53

    (23) term -> term MULT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . OR relexp
    (21) expression -> expression . MINUS expression

    MULT            reduce using rule 23 (term -> term MULT expression .)
    DIV             reduce using rule 23 (term -> term MULT expression .)
    AND             reduce using rule 23 (term -> term MULT expression .)
    PLUS            reduce using rule 23 (term -> term MULT expression .)
    OR              reduce using rule 23 (term -> term MULT expression .)
    MINUS           reduce using rule 23 (term -> term MULT expression .)
    GT              reduce using rule 23 (term -> term MULT expression .)
    EQ              reduce using rule 23 (term -> term MULT expression .)
    LT              reduce using rule 23 (term -> term MULT expression .)
    ID              reduce using rule 23 (term -> term MULT expression .)
    PRINT           reduce using rule 23 (term -> term MULT expression .)
    IF              reduce using rule 23 (term -> term MULT expression .)
    LOOP            reduce using rule 23 (term -> term MULT expression .)
    $end            reduce using rule 23 (term -> term MULT expression .)
    CLOSE_BRACKET   reduce using rule 23 (term -> term MULT expression .)
    OPEN_BRACKET    reduce using rule 23 (term -> term MULT expression .)
    CLOSE_PARENT    reduce using rule 23 (term -> term MULT expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 54

    (24) term -> term DIV expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . OR relexp
    (21) expression -> expression . MINUS expression

    MULT            reduce using rule 24 (term -> term DIV expression .)
    DIV             reduce using rule 24 (term -> term DIV expression .)
    AND             reduce using rule 24 (term -> term DIV expression .)
    PLUS            reduce using rule 24 (term -> term DIV expression .)
    OR              reduce using rule 24 (term -> term DIV expression .)
    MINUS           reduce using rule 24 (term -> term DIV expression .)
    GT              reduce using rule 24 (term -> term DIV expression .)
    EQ              reduce using rule 24 (term -> term DIV expression .)
    LT              reduce using rule 24 (term -> term DIV expression .)
    ID              reduce using rule 24 (term -> term DIV expression .)
    PRINT           reduce using rule 24 (term -> term DIV expression .)
    IF              reduce using rule 24 (term -> term DIV expression .)
    LOOP            reduce using rule 24 (term -> term DIV expression .)
    $end            reduce using rule 24 (term -> term DIV expression .)
    CLOSE_BRACKET   reduce using rule 24 (term -> term DIV expression .)
    OPEN_BRACKET    reduce using rule 24 (term -> term DIV expression .)
    CLOSE_PARENT    reduce using rule 24 (term -> term DIV expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 55

    (25) term -> term AND relexp .
    (16) relexp -> relexp . GT relexp
    (17) relexp -> relexp . EQ relexp
    (18) relexp -> relexp . LT relexp

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
    MULT            reduce using rule 25 (term -> term AND relexp .)
    DIV             reduce using rule 25 (term -> term AND relexp .)
    AND             reduce using rule 25 (term -> term AND relexp .)
    PLUS            reduce using rule 25 (term -> term AND relexp .)
    OR              reduce using rule 25 (term -> term AND relexp .)
    MINUS           reduce using rule 25 (term -> term AND relexp .)
    ID              reduce using rule 25 (term -> term AND relexp .)
    PRINT           reduce using rule 25 (term -> term AND relexp .)
    IF              reduce using rule 25 (term -> term AND relexp .)
    LOOP            reduce using rule 25 (term -> term AND relexp .)
    $end            reduce using rule 25 (term -> term AND relexp .)
    CLOSE_BRACKET   reduce using rule 25 (term -> term AND relexp .)
    OPEN_BRACKET    reduce using rule 25 (term -> term AND relexp .)
    CLOSE_PARENT    reduce using rule 25 (term -> term AND relexp .)
    GT              shift and go to state 30
    EQ              shift and go to state 31
    LT              shift and go to state 32

  ! GT              [ reduce using rule 25 (term -> term AND relexp .) ]
  ! EQ              [ reduce using rule 25 (term -> term AND relexp .) ]
  ! LT              [ reduce using rule 25 (term -> term AND relexp .) ]


state 56

    (33) factor -> OPEN_PARENT relexp CLOSE_PARENT .

    MULT            reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    DIV             reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    AND             reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    PLUS            reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    OR              reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    MINUS           reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    GT              reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    EQ              reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    LT              reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    ID              reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    PRINT           reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    IF              reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    LOOP            reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    $end            reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    CLOSE_BRACKET   reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    OPEN_BRACKET    reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)
    CLOSE_PARENT    reduce using rule 33 (factor -> OPEN_PARENT relexp CLOSE_PARENT .)


state 57

    (7) if -> IF relexp OPEN_BRACKET stmts . CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (8) if -> IF relexp OPEN_BRACKET stmts . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 61


state 58

    (9) if -> IF error OPEN_BRACKET stmts . CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (10) if -> IF error OPEN_BRACKET stmts . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 62


state 59

    (11) loop -> LOOP relexp OPEN_BRACKET stmts . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 63


state 60

    (12) loop -> LOOP error OPEN_BRACKET stmts . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 64


state 61

    (7) if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET . ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (8) if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET .

    ELSE            shift and go to state 65
    ID              reduce using rule 8 (if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET .)
    PRINT           reduce using rule 8 (if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET .)
    IF              reduce using rule 8 (if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET .)
    LOOP            reduce using rule 8 (if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET .)
    $end            reduce using rule 8 (if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 8 (if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET .)


state 62

    (9) if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET . ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (10) if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET .

    ELSE            shift and go to state 66
    ID              reduce using rule 10 (if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET .)
    PRINT           reduce using rule 10 (if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET .)
    IF              reduce using rule 10 (if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET .)
    LOOP            reduce using rule 10 (if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET .)
    $end            reduce using rule 10 (if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 10 (if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET .)


state 63

    (11) loop -> LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET .

    ID              reduce using rule 11 (loop -> LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET .)
    PRINT           reduce using rule 11 (loop -> LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET .)
    IF              reduce using rule 11 (loop -> LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET .)
    LOOP            reduce using rule 11 (loop -> LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET .)
    $end            reduce using rule 11 (loop -> LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 11 (loop -> LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET .)


state 64

    (12) loop -> LOOP error OPEN_BRACKET stmts CLOSE_BRACKET .

    ID              reduce using rule 12 (loop -> LOOP error OPEN_BRACKET stmts CLOSE_BRACKET .)
    PRINT           reduce using rule 12 (loop -> LOOP error OPEN_BRACKET stmts CLOSE_BRACKET .)
    IF              reduce using rule 12 (loop -> LOOP error OPEN_BRACKET stmts CLOSE_BRACKET .)
    LOOP            reduce using rule 12 (loop -> LOOP error OPEN_BRACKET stmts CLOSE_BRACKET .)
    $end            reduce using rule 12 (loop -> LOOP error OPEN_BRACKET stmts CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 12 (loop -> LOOP error OPEN_BRACKET stmts CLOSE_BRACKET .)


state 65

    (7) if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE . OPEN_BRACKET stmts CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 67


state 66

    (9) if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE . OPEN_BRACKET stmts CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 68


state 67

    (7) if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET . stmts CLOSE_BRACKET
    (1) stmts -> . stmt stmts
    (2) stmts -> . empty
    (3) stmt -> . assign
    (4) stmt -> . out
    (5) stmt -> . if
    (6) stmt -> . loop
    (34) empty -> .
    (13) assign -> . ID ASSIGNER relexp
    (14) out -> . PRINT relexp
    (7) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (8) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (9) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (10) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET
    (11) loop -> . LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (12) loop -> . LOOP error OPEN_BRACKET stmts CLOSE_BRACKET

    CLOSE_BRACKET   reduce using rule 34 (empty -> .)
    ID              shift and go to state 8
    PRINT           shift and go to state 9
    IF              shift and go to state 10
    LOOP            shift and go to state 11

    stmts                          shift and go to state 69
    stmt                           shift and go to state 2
    empty                          shift and go to state 3
    assign                         shift and go to state 4
    out                            shift and go to state 5
    if                             shift and go to state 6
    loop                           shift and go to state 7

state 68

    (9) if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET . stmts CLOSE_BRACKET
    (1) stmts -> . stmt stmts
    (2) stmts -> . empty
    (3) stmt -> . assign
    (4) stmt -> . out
    (5) stmt -> . if
    (6) stmt -> . loop
    (34) empty -> .
    (13) assign -> . ID ASSIGNER relexp
    (14) out -> . PRINT relexp
    (7) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (8) if -> . IF relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (9) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET
    (10) if -> . IF error OPEN_BRACKET stmts CLOSE_BRACKET
    (11) loop -> . LOOP relexp OPEN_BRACKET stmts CLOSE_BRACKET
    (12) loop -> . LOOP error OPEN_BRACKET stmts CLOSE_BRACKET

    CLOSE_BRACKET   reduce using rule 34 (empty -> .)
    ID              shift and go to state 8
    PRINT           shift and go to state 9
    IF              shift and go to state 10
    LOOP            shift and go to state 11

    stmts                          shift and go to state 70
    stmt                           shift and go to state 2
    empty                          shift and go to state 3
    assign                         shift and go to state 4
    out                            shift and go to state 5
    if                             shift and go to state 6
    loop                           shift and go to state 7

state 69

    (7) if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 71


state 70

    (9) if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 72


state 71

    (7) if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET .

    ID              reduce using rule 7 (if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET .)
    PRINT           reduce using rule 7 (if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET .)
    IF              reduce using rule 7 (if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET .)
    LOOP            reduce using rule 7 (if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET .)
    $end            reduce using rule 7 (if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 7 (if -> IF relexp OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET .)


state 72

    (9) if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET .

    ID              reduce using rule 9 (if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET .)
    PRINT           reduce using rule 9 (if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET .)
    IF              reduce using rule 9 (if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET .)
    LOOP            reduce using rule 9 (if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET .)
    $end            reduce using rule 9 (if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 9 (if -> IF error OPEN_BRACKET stmts CLOSE_BRACKET ELSE OPEN_BRACKET stmts CLOSE_BRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 15 resolved as shift
WARNING: shift/reduce conflict for OR in state 15 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 15 resolved as shift
WARNING: shift/reduce conflict for MULT in state 18 resolved as shift
WARNING: shift/reduce conflict for DIV in state 18 resolved as shift
WARNING: shift/reduce conflict for AND in state 18 resolved as shift
WARNING: shift/reduce conflict for GT in state 41 resolved as shift
WARNING: shift/reduce conflict for EQ in state 41 resolved as shift
WARNING: shift/reduce conflict for LT in state 41 resolved as shift
WARNING: shift/reduce conflict for GT in state 47 resolved as shift
WARNING: shift/reduce conflict for EQ in state 47 resolved as shift
WARNING: shift/reduce conflict for LT in state 47 resolved as shift
WARNING: shift/reduce conflict for GT in state 48 resolved as shift
WARNING: shift/reduce conflict for EQ in state 48 resolved as shift
WARNING: shift/reduce conflict for LT in state 48 resolved as shift
WARNING: shift/reduce conflict for GT in state 49 resolved as shift
WARNING: shift/reduce conflict for EQ in state 49 resolved as shift
WARNING: shift/reduce conflict for LT in state 49 resolved as shift
WARNING: shift/reduce conflict for GT in state 51 resolved as shift
WARNING: shift/reduce conflict for EQ in state 51 resolved as shift
WARNING: shift/reduce conflict for LT in state 51 resolved as shift
WARNING: shift/reduce conflict for GT in state 55 resolved as shift
WARNING: shift/reduce conflict for EQ in state 55 resolved as shift
WARNING: shift/reduce conflict for LT in state 55 resolved as shift
